{"version":3,"sources":["components/common/FormsControl/FormsControl.jsx","components/common/FormsControl/FormsControl.module.css","helpers/validators.js","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["FormControl","meta","children","showError","touched","error","className","style","formControl","PostFormControl","props","input","restProps","MessageFormControl","LoginInputControl","createField","placeholder","name","validators","component","type","module","exports","required","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","LoginReduxForm","reduxForm","form","handleSubmit","captcha","onSubmit","appLoginBlock","appLoginLog","validate","appLoginPassword","appLoginCheckbox","src","alt","appLoginError","connect","global","isAuth","auth","captchaUrl","loginTC","to","appLogin","email","password","rememberMe","antibot","console","log","url"],"mappings":"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","file":"static/js/7.b1de0282.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport style from './FormsControl.module.css';\r\n\r\n\r\nconst FormControl = ({meta, children}) => {\r\n  const showError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + ' ' + (showError && style.error) }>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {showError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PostFormControl = (props) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\nexport const MessageFormControl = (props) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\nexport const LoginInputControl = (props) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, type, props = {}) => {\r\n  return (\r\n    <Field \r\n      placeholder={placeholder}\r\n      name={name}\r\n      type={type}\r\n      validators={validators}\r\n      component={component}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__316Ap\",\"error\":\"FormsControl_error__1Y26u\"};","const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nconst maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n\r\nconst minLengthCreator = (minLength) => (value) => {\r\n  if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n  return undefined;\r\n};\r\n\r\n\r\nexport {required, maxLengthCreator, minLengthCreator};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appLogin\":\"Login_appLogin__1DjYT\",\"appLoginBlock\":\"Login_appLoginBlock__2WvVv\",\"appLoginLog\":\"Login_appLoginLog__1c8Ts\",\"appLoginPassword\":\"Login_appLoginPassword__3sLQc\",\"appLoginCheckbox\":\"Login_appLoginCheckbox__3S1zu\",\"appLoginError\":\"Login_appLoginError__FGxUq\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { loginTC } from '../../redux/actions';\r\nimport { LoginInputControl } from '../common/FormsControl/FormsControl';\r\nimport { required, maxLengthCreator, minLengthCreator } from '../../helpers/validators';\r\nimport style from './Login.module.css';\r\n\r\nconst maxLength = maxLengthCreator(30), \r\n  minLength = minLengthCreator(2);\r\n\r\nconst LoginForm = ({ handleSubmit, error, captcha }) => (\r\n  <form onSubmit={handleSubmit} className={style.appLoginBlock}>\r\n    <Field \r\n      name=\"email\"\r\n      className={style.appLoginLog} \r\n      component={LoginInputControl}\r\n      placeholder=\"Логин\"\r\n      validate={[required, maxLength, minLength]}\r\n    />\r\n    <Field \r\n      name=\"password\"\r\n      className={style.appLoginPassword} \r\n      component={LoginInputControl}\r\n      placeholder=\"Пароль\"\r\n      type=\"password\"\r\n      validate={[required, maxLength, minLength]}\r\n    />\r\n\r\n    <div>\r\n      <Field \r\n        name=\"rememberMe\"\r\n        className={style.appLoginCheckbox} \r\n        component=\"input\"\r\n        type=\"checkbox\"\r\n        placeholder=\"Пароль\"\r\n      />\r\n      Запомнить меня\r\n    </div>\r\n\r\n    {\r\n      captcha && <img src={captcha} alt=\"captcha\" />\r\n    }\r\n    {\r\n      captcha && (\r\n        <Field \r\n          name=\"antibot\"\r\n          className={style.appLoginLog} \r\n          component=\"input\"\r\n          placeholder=\"antibot symbols\"\r\n        />\r\n      )\r\n    }\r\n\r\n    <button type=\"submit\">Войти!</button>\r\n\r\n    <div className={style.appLoginError}>{error}</div>\r\n  </form>\r\n);\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = ({ loginTC, isAuth, captcha }) => {\r\n  const onSubmit = ({ email, password, rememberMe, antibot }) => {\r\n    console.log(email, password, rememberMe);\r\n    loginTC(email, password, rememberMe, antibot);\r\n  };\r\n\r\n  if (isAuth) return <Redirect to=\"/profile\" />;\r\n\r\n  return (\r\n    <div className={style.appLogin}>\r\n      <LoginReduxForm onSubmit={onSubmit} captcha={captcha ? captcha.url : null} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ global }) => ({ \r\n  isAuth: global.auth.isAuth,\r\n  captcha: global.auth.captchaUrl\r\n});\r\n  \r\nexport default connect(mapStateToProps, { loginTC })(Login);"],"sourceRoot":""}