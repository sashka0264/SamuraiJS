{"version":3,"sources":["components/common/FormsControl/FormsControl.tsx","components/common/FormsControl/FormsControl.module.css","helpers/validators.js","components/Login/Login.module.css","components/Login/Login.tsx"],"names":["FormControl","meta","children","showError","touched","error","className","style","formControl","PostFormControl","props","input","restProps","MessageFormControl","LoginInputControl","module","exports","required","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","appLoginBlock","name","appLoginLog","component","placeholder","validate","appLoginPassword","type","appLoginCheckbox","appLoginError","connect","isAuth","global","auth","loginTC","to","appLogin","email","password","rememberMe","console","log"],"mappings":"yQASMA,EAAc,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SACpBC,EAAYF,EAAKG,SAAWH,EAAKI,MACvC,OACE,yBAAKC,UAAWC,IAAMC,YAAc,KAAOL,GAAaI,IAAMF,QAC5D,6BACGH,GAEFC,GAAa,8BAAOF,EAAKI,SAKnBI,EAAkB,SAACC,GAAmB,IAC1CC,EAAuBD,EAAvBC,MAAUC,EAD+B,YAClBF,EADkB,WAEhD,OAAO,kBAACV,EAAgBU,EAAO,8CAAcC,EAAWC,MAG7CC,EAAqB,SAACH,GAAmB,IAC7CC,EAAuBD,EAAvBC,MAAUC,EADkC,YACrBF,EADqB,WAEnD,OAAO,kBAACV,EAAgBU,EAAO,2CAAWC,EAAWC,MAG1CE,EAAoB,SAACJ,GAAmB,IAC5CC,EAAuBD,EAAvBC,MAAUC,EADiC,YACpBF,EADoB,WAElD,OAAO,kBAACV,EAAgBU,EAAO,2CAAWC,EAAWC,O,oBChCvDG,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,iCCD1E,oGAAMC,EAAW,SAACC,GAChB,IAAIA,EACJ,MAAO,qBAGHC,EAAmB,SAACC,GAAD,OAAe,SAACF,GACvC,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,cAI1BE,EAAmB,SAACC,GAAD,OAAe,SAACL,GACvC,GAAIA,EAAMG,OAASE,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCVhCR,EAAOC,QAAU,CAAC,SAAW,wBAAwB,cAAgB,6BAA6B,YAAc,2BAA2B,iBAAmB,gCAAgC,iBAAmB,gCAAgC,cAAgB,+B,iCCDjQ,wGASMI,EAAYD,YAAiB,IAC/BI,EAAYD,YAAiB,GAkC3BE,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,CAhCL,SAAC,GAA+B,IAA9BE,EAA6B,EAA7BA,aAActB,EAAe,EAAfA,MAChC,OACE,0BAAMuB,SAAUD,EAAcrB,UAAWC,IAAMsB,eAC7C,kBAAC,IAAD,CAAOC,KAAK,QACVxB,UAAWC,IAAMwB,YACjBC,UAAWlB,IACXmB,YAAY,iCACZC,SAAU,CAACjB,IAAUG,EAAWG,KAElC,kBAAC,IAAD,CAAOO,KAAK,WACVxB,UAAWC,IAAM4B,iBACjBH,UAAWlB,IACXmB,YAAY,uCACZG,KAAK,WACLF,SAAU,CAACjB,IAAUG,EAAWG,KAGlC,6BACE,kBAAC,IAAD,CAAOO,KAAK,aACVxB,UAAWC,IAAM8B,iBACjBL,UAAU,QACVI,KAAK,WACLH,YAAY,yCALhB,mFASA,4BAAQG,KAAK,UAAb,mCAEA,yBAAK9B,UAAWC,IAAM+B,eAAgBjC,MA4B7BkC,sBAFS,SAAC,GAAD,MAAmB,CAACC,OAApB,EAAEC,OAAiCC,KAAKF,SAExB,CAACG,aAA1BJ,CAjBD,SAAC,GAA8B,IAA7BI,EAA4B,EAA5BA,QAMd,OAN0C,EAAnBH,OAMJ,kBAAC,IAAD,CAAUI,GAAG,aAG9B,yBAAKtC,UAAWC,IAAMsC,UACpB,kBAACrB,EAAD,CAAgBI,SATH,SAAC,GAAuC,IAAtCkB,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,WAClCC,QAAQC,IAAIJ,EAAOC,EAAUC,GAC7BL,EAAQG,EAAOC,EAAUC","file":"static/js/7.f2668aba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"./FormsControl.module.css\";\r\n\r\ninterface IProps {\r\n  meta: {touched: boolean, error: undefined | string};\r\n  children: any;\r\n  input: {name: string};\r\n}\r\n\r\nconst FormControl = ({meta, children}:IProps) => {\r\n  const showError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (showError && style.error) }>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {showError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PostFormControl = (props: IProps) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\nexport const MessageFormControl = (props: IProps) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\nexport const LoginInputControl = (props: IProps) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1U_fN\",\"error\":\"FormsControl_error__2rj4H\"};","const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nconst maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n\r\nconst minLengthCreator = (minLength) => (value) => {\r\n  if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n  return undefined;\r\n};\r\n\r\n\r\nexport {required, maxLengthCreator, minLengthCreator};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appLogin\":\"Login_appLogin__2dw8w\",\"appLoginBlock\":\"Login_appLoginBlock__3yQnJ\",\"appLoginLog\":\"Login_appLoginLog__dds4u\",\"appLoginPassword\":\"Login_appLoginPassword__3JAej\",\"appLoginCheckbox\":\"Login_appLoginCheckbox__1y8VU\",\"appLoginError\":\"Login_appLoginError__3qrpR\"};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {loginTC} from \"../../redux/actions\";\r\nimport {LoginInputControl} from \"../common/FormsControl/FormsControl\";\r\nimport {required, maxLengthCreator, minLengthCreator} from \"../../helpers/validators\";\r\nimport style from \"./Login.module.css\";\r\n\r\nconst maxLength = maxLengthCreator(30), \r\n    minLength = minLengthCreator(2);\r\n\r\nconst LoginForm = ({handleSubmit, error}:any) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} className={style.appLoginBlock}>\r\n      <Field name=\"email\"\r\n        className={style.appLoginLog} \r\n        component={LoginInputControl}\r\n        placeholder=\"Логин\"\r\n        validate={[required, maxLength, minLength]}\r\n      />\r\n      <Field name=\"password\"\r\n        className={style.appLoginPassword} \r\n        component={LoginInputControl}\r\n        placeholder=\"Пароль\"\r\n        type=\"password\"\r\n        validate={[required, maxLength, minLength]}\r\n      />\r\n\r\n      <div>\r\n        <Field name=\"rememberMe\"\r\n          className={style.appLoginCheckbox} \r\n          component=\"input\"\r\n          type=\"checkbox\"\r\n          placeholder=\"Пароль\"\r\n        />Запомнить меня\r\n      </div>\r\n\r\n      <button type=\"submit\">Войти!</button>\r\n\r\n      <div className={style.appLoginError}>{error}</div>\r\n    </form>\r\n  );\r\n};\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm);\r\n\r\ninterface IProps {\r\n  loginTC: any;\r\n  isAuth: boolean;\r\n}\r\n \r\nconst Login = ({loginTC, isAuth}:IProps) => {\r\n  const onSubmit = ({email, password, rememberMe}:any) => {\r\n    console.log(email, password, rememberMe);\r\n    loginTC(email, password, rememberMe);\r\n  };\r\n\r\n  if (isAuth) return <Redirect to=\"/profile\"/>;\r\n\r\n  return (\r\n    <div className={style.appLogin}>\r\n      <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({global}:any) => ({isAuth: global.auth.isAuth});\r\n  \r\nexport default connect(mapStateToProps, {loginTC})(Login);"],"sourceRoot":""}