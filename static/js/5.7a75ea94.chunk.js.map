{"version":3,"sources":["hoc/WithAuthRedirect.jsx","components/common/FormsControl/FormsControl.tsx","components/common/FormsControl/FormsControl.module.css","helpers/validators.js","components/Dialogs/Dialogs/DialogItem/img/defaultAvatar.png","components/Dialogs/Dialogs/MessageItem/MessageItem.module.css","components/Dialogs/Dialogs/img/sendIcon.svg","components/Dialogs/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Dialogs/MessageItem/MessageItem.tsx","components/Dialogs/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.jsx"],"names":["WithAuthRedirect","Component","this","props","isAuth","to","FormControl","meta","children","showError","touched","error","className","style","formControl","PostFormControl","input","restProps","MessageFormControl","LoginInputControl","module","exports","required","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","DialogItem","id","name","path","alt","src","defaultAvatar","MessageItem","content","appDialogsMessagesMessage","DialogsReduxForm","reduxForm","form","handleSubmit","onSubmit","appDialogsForm","Field","validate","appDialogsMessagesInput","component","placeholder","appDialogsMessagesSend","sendIcon","Dialogs","messagesPage","sendMessageAC","appDialogs","appDialogsFriendAndMessages","appDialogsItems","dialogs","map","item","key","appDialogsMessages","messages","newMessageBody","DialogsContainer","compose","connect","global","auth"],"mappings":"8NAIMA,EAAmB,SAACC,GAQxB,OARsC,iLAIlC,OADiBC,KAAKC,MAAfC,OAEA,kBAACH,EAAcC,KAAKC,OADP,kBAAC,IAAD,CAAUE,GAAG,eAJC,GACNJ,K,gLCI5BK,EAAc,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SACpBC,EAAYF,EAAKG,SAAWH,EAAKI,MACvC,OACE,yBAAKC,UAAWC,IAAMC,YAAc,KAAOL,GAAaI,IAAMF,QAC5D,6BACGH,GAEFC,GAAa,8BAAOF,EAAKI,SAKnBI,EAAkB,SAACZ,GAAmB,IAC1Ca,EAAuBb,EAAvBa,MAAUC,EAD+B,YAClBd,EADkB,WAEhD,OAAO,kBAACG,EAAgBH,EAAO,8CAAca,EAAWC,MAG7CC,EAAqB,SAACf,GAAmB,IAC7Ca,EAAuBb,EAAvBa,MAAUC,EADkC,YACrBd,EADqB,WAEnD,OAAO,kBAACG,EAAgBH,EAAO,2CAAWa,EAAWC,MAG1CE,EAAoB,SAAChB,GAAmB,IAC5Ca,EAAuBb,EAAvBa,MAAUC,EADiC,YACpBd,EADoB,WAElD,OAAO,kBAACG,EAAgBH,EAAO,2CAAWa,EAAWC,O,oBChCvDG,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,iCCD1E,oGAAMC,EAAW,SAACC,GAChB,IAAIA,EACJ,MAAO,qBAGHC,EAAmB,SAACC,GAAD,OAAe,SAACF,GACvC,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,cAI1BE,EAAmB,SAACC,GAAD,OAAe,SAACL,GACvC,GAAIA,EAAMG,OAASE,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,0CCXhCR,EAAOC,QAAU,IAA0B,2C,oBCC3CD,EAAOC,QAAU,CAAC,0BAA4B,iD,oBCD9CD,EAAOC,QAAU,IAA0B,sC,oBCC3CD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,4BAA8B,6CAA6C,uBAAyB,wCAAwC,wBAA0B,yCAAyC,eAAiB,kC,yLCoB5QQ,EAVI,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KACpBC,EAAc,YAAcF,EAChC,OACC,kBAAC,IAAD,CAASzB,GAAI2B,EAAMpB,UAAU,2BAC5B,yBAAKqB,IAAI,gBAAgBC,IAAKC,MAC7BJ,I,kBCHWK,EANK,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,QACrB,OACC,yBAAKzB,UAAWC,IAAMyB,2BAA4BD,I,sDCgB9CZ,EAAYD,YAAiB,IACjCI,EAAYD,YAAiB,GAiBzBY,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,CAfL,SAAC,GAAwB,IAAvBE,EAAsB,EAAtBA,aACpB,OACE,0BAAMC,SAAUD,EAAc9B,UAAWC,IAAM+B,gBAC7C,kBAACC,EAAA,EAAD,CACEC,SAAU,CAACxB,IAAUG,EAAWG,GAChChB,UAAWC,IAAMkC,wBACjBC,UAAW9B,IACXa,KAAK,iBACLkB,YAAY,uBAEd,4BAAQrC,UAAWC,IAAMqC,wBAAwB,yBAAKjB,IAAI,WAAWC,IAAKiB,UA4BjEC,EArBC,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,cAI9B,OACE,yBAAK1C,UAAWC,IAAM0C,YACpB,yBAAK3C,UAAWC,IAAM2C,6BACpB,yBAAK5C,UAAWC,IAAM4C,iBACnBJ,EAAaK,QAAQC,IAAK,SAACC,GAAD,OAAsC,kBAAC,EAAD,CAAY7B,KAAM6B,EAAK7B,KAAMD,GAAI8B,EAAK9B,GAAI+B,IAAKD,EAAK9B,QAGvH,yBAAKlB,UAAWC,IAAMiD,oBACnBT,EAAaU,SAASJ,IAAK,SAACC,GAAD,OAAyC,kBAAC,EAAD,CAAavB,QAASuB,EAAKvB,QAASwB,IAAKD,EAAK9B,SAIvH,kBAACS,EAAD,CAAkBI,SAfL,SAAC,GAA0B,IAAzBqB,EAAwB,EAAxBA,eACjBV,EAAcU,QCxCZC,E,iLAEF,OAAO,kBAAC,EAAY/D,KAAKC,W,GAFEF,aAQhBiE,sBACbC,YAHsB,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,MAAe,CAACf,aAAce,EAAOf,aAAcjD,OAAQgE,EAAOC,KAAKjE,SAGpE,CAACkD,oBAC1BtD,IAFakE,CAIbD","file":"static/js/5.7a75ea94.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends Component {\r\n    render() {\r\n      const {isAuth} = this.props;\r\n      if (!isAuth) return <Redirect to=\"/login\"/>;\r\n      return <Component {...this.props}/>;\r\n    }\r\n  }\r\n  return RedirectComponent;\r\n};\r\n\r\nexport {WithAuthRedirect};","import React from \"react\";\r\nimport style from \"./FormsControl.module.css\";\r\n\r\ninterface IProps {\r\n  meta: {touched: boolean, error: undefined | string};\r\n  children: any;\r\n  input: {name: string};\r\n}\r\n\r\nconst FormControl = ({meta, children}:IProps) => {\r\n  const showError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (showError && style.error) }>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {showError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PostFormControl = (props: IProps) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\nexport const MessageFormControl = (props: IProps) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\nexport const LoginInputControl = (props: IProps) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1U_fN\",\"error\":\"FormsControl_error__2rj4H\"};","const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nconst maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n\r\nconst minLengthCreator = (minLength) => (value) => {\r\n  if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n  return undefined;\r\n};\r\n\r\n\r\nexport {required, maxLengthCreator, minLengthCreator};","module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.9fca99c6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appDialogsMessagesMessage\":\"MessageItem_appDialogsMessagesMessage__3Nb2j\"};","module.exports = __webpack_public_path__ + \"static/media/sendIcon.1c8a16a2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appDialogs\":\"Dialogs_appDialogs__1WngA\",\"appDialogsFriendAndMessages\":\"Dialogs_appDialogsFriendAndMessages__D6wmg\",\"appDialogsMessagesSend\":\"Dialogs_appDialogsMessagesSend__1Dfh-\",\"appDialogsMessagesInput\":\"Dialogs_appDialogsMessagesInput__22D4L\",\"appDialogsForm\":\"Dialogs_appDialogsForm__26xtS\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n// npm i --save @types/react-router-dom\r\nimport \"./DialogItem.css\";\r\nimport defaultAvatar from \"./img/defaultAvatar.png\";\r\n\r\ninterface IProps {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst DialogItem = ({id, name}:IProps) => {\r\n\tlet path:string = \"/dialogs/\" + id;\r\n\treturn (\r\n\t\t<NavLink to={path} className=\"app-dialogs-items__item\">\r\n\t\t\t<img alt=\"defaultAvatar\" src={defaultAvatar}/>\r\n\t\t\t{name}\r\n\t\t</NavLink>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from \"./MessageItem.module.css\";\r\n\r\ninterface IProps {\r\n  content: string;\r\n}\r\n\r\nconst MessageItem = ({content}:IProps) => {\r\n\treturn (\r\n\t\t<div className={style.appDialogsMessagesMessage}>{content}</div>\r\n\t);\r\n};\r\n\r\nexport default MessageItem; ","import React from \"react\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport {MessageFormControl} from \"../../common/FormsControl/FormsControl\";\r\nimport {required, maxLengthCreator, minLengthCreator} from \"../../../helpers/validators\";\r\nimport sendIcon from \"./img/sendIcon.svg\";\r\nimport style from \"./Dialogs.module.css\";\r\n\r\ninterface IProps {\r\n  messagesPage: {\r\n    dialogs: {\r\n      id: number;\r\n      name: string;\r\n      map: any;\r\n    };\r\n    messages: {\r\n      id: number;\r\n      content: string;\r\n      map: any;\r\n    };\r\n  };\r\n  sendMessageAC: any;\r\n}\r\n\r\nconst maxLength = maxLengthCreator(75), \r\n  minLength = minLengthCreator(2);\r\n\r\nconst DialogsForm = ({handleSubmit}:any) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} className={style.appDialogsForm}>\r\n      <Field \r\n        validate={[required, maxLength, minLength]}\r\n        className={style.appDialogsMessagesInput} \r\n        component={MessageFormControl} \r\n        name=\"newMessageBody\" \r\n        placeholder=\"Write a message...\"\r\n      />\r\n      <button className={style.appDialogsMessagesSend}><img alt=\"sendIcon\" src={sendIcon}/></button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst DialogsReduxForm = reduxForm({form: \"dialogs\"})(DialogsForm);\r\n\r\nconst Dialogs = ({messagesPage, sendMessageAC}:IProps) => {\r\n  const onSubmit = ({newMessageBody}:any) => {\r\n    sendMessageAC(newMessageBody);\r\n\t};\r\n  return (\r\n    <div className={style.appDialogs}>\r\n      <div className={style.appDialogsFriendAndMessages}>\r\n        <div className={style.appDialogsItems}>\r\n          {messagesPage.dialogs.map( (item: {name: string, id: number}) => <DialogItem name={item.name} id={item.id} key={item.id}/>)}\r\n        </div>\r\n\r\n        <div className={style.appDialogsMessages}>\r\n          {messagesPage.messages.map( (item: {content: string, id: number}) => <MessageItem content={item.content} key={item.id}/>)}\r\n        </div>\r\n      </div>\r\n\r\n      <DialogsReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {sendMessageAC} from \"../../redux/actions\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\n\r\nclass DialogsContainer extends Component {\r\n  render() {\r\n    return <Dialogs {...this.props}/>;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({global}) => ({messagesPage: global.messagesPage, isAuth: global.auth.isAuth});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {sendMessageAC}), \r\n  WithAuthRedirect\r\n)(\r\n  DialogsContainer\r\n);"],"sourceRoot":""}