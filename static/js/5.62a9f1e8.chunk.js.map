{"version":3,"sources":["components/common/FormsControl/FormsControl.jsx","components/common/FormsControl/FormsControl.module.css","helpers/validators.js","hoc/WithAuthRedirect.jsx","components/Dialogs/Dialogs/DialogItem/img/defaultAvatar.png","components/Dialogs/Dialogs/MessageItem/MessageItem.module.css","components/Dialogs/Dialogs/img/sendIcon.svg","components/Dialogs/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Dialogs/MessageItem/MessageItem.tsx","components/Dialogs/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","meta","children","showError","touched","error","className","style","formControl","PostFormControl","props","input","restProps","MessageFormControl","LoginInputControl","createField","placeholder","name","validators","component","type","module","exports","required","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","WithAuthRedirect","Component","this","isAuth","to","DialogItem","id","path","alt","src","defaultAvatar","MessageItem","content","appDialogsMessagesMessage","DialogsReduxForm","reduxForm","form","onSubmitSuccess","res","dispatch","reset","handleSubmit","onSubmit","appDialogsForm","Field","validate","appDialogsMessagesInput","appDialogsMessagesSend","sendIcon","Dialogs","messagesPage","sendMessageAC","appDialogs","appDialogsFriendAndMessages","users","dialogs","map","item","key","dialogList","messages","newMessageBody","DialogsContainer","PureComponent","compose","connect","global","auth"],"mappings":"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","file":"static/js/5.62a9f1e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport style from './FormsControl.module.css';\r\n\r\n\r\nconst FormControl = ({meta, children}) => {\r\n  const showError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + ' ' + (showError && style.error) }>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {showError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const PostFormControl = (props) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\nexport const MessageFormControl = (props) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\nexport const LoginInputControl = (props) => {\r\n  const {input, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, type, props = {}) => {\r\n  return (\r\n    <Field \r\n      placeholder={placeholder}\r\n      name={name}\r\n      type={type}\r\n      validators={validators}\r\n      component={component}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__316Ap\",\"error\":\"FormsControl_error__1Y26u\"};","const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nconst maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n\r\nconst minLengthCreator = (minLength) => (value) => {\r\n  if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n  return undefined;\r\n};\r\n\r\n\r\nexport {required, maxLengthCreator, minLengthCreator};","/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends Component {\r\n    render() {\r\n      const {isAuth} = this.props;\r\n      if (!isAuth) return <Redirect to=\"/login\"/>;\r\n      return <Component {...this.props}/>;\r\n    }\r\n  }\r\n  return RedirectComponent;\r\n};\r\n\r\nexport {WithAuthRedirect};","module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.9fca99c6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appDialogsMessagesMessage\":\"MessageItem_appDialogsMessagesMessage__2Sded\"};","module.exports = __webpack_public_path__ + \"static/media/sendIcon.1c8a16a2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appDialogs\":\"Dialogs_appDialogs__1DLwv\",\"appDialogsFriendAndMessages\":\"Dialogs_appDialogsFriendAndMessages__CoXCZ\",\"appDialogsMessagesSend\":\"Dialogs_appDialogsMessagesSend__Xb6dW\",\"appDialogsMessagesInput\":\"Dialogs_appDialogsMessagesInput__3_NVw\",\"appDialogsForm\":\"Dialogs_appDialogsForm__2dHUk\",\"users\":\"Dialogs_users__2EngL\",\"dialogList\":\"Dialogs_dialogList__3PVQp\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n// npm i --save @types/react-router-dom\r\nimport \"./DialogItem.css\";\r\nimport defaultAvatar from \"./img/defaultAvatar.png\";\r\n\r\ninterface IProps {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst DialogItem = ({id, name}:IProps) => {\r\n\tlet path:string = \"/dialogs/\" + id;\r\n\treturn (\r\n\t\t<NavLink to={path} className=\"app-dialogs-items__item\">\r\n\t\t\t<img alt=\"defaultAvatar\" src={defaultAvatar}/>\r\n\t\t\t{name}\r\n\t\t</NavLink>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from \"./MessageItem.module.css\";\r\n\r\ninterface IProps {\r\n  content: string;\r\n}\r\n\r\nconst MessageItem = ({content}:IProps) => {\r\n\treturn (\r\n\t\t<div className={style.appDialogsMessagesMessage}>{content}</div>\r\n\t);\r\n};\r\n\r\nexport default MessageItem; ","import React from 'react';\r\nimport {reduxForm, Field, reset } from 'redux-form';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport {MessageFormControl} from '../../common/FormsControl/FormsControl';\r\nimport {required, maxLengthCreator, minLengthCreator} from '../../../helpers/validators';\r\nimport sendIcon from './img/sendIcon.svg';\r\nimport style from './Dialogs.module.css';\r\n\r\ninterface IProps {\r\n  messagesPage: {\r\n    dialogs: {\r\n      id: number;\r\n      name: string;\r\n      map: any;\r\n    };\r\n    messages: {\r\n      id: number;\r\n      content: string;\r\n      map: any;\r\n    };\r\n  };\r\n  sendMessageAC: any;\r\n}\r\n\r\nconst maxLength = maxLengthCreator(75), \r\n  minLength = minLengthCreator(2);\r\n\r\nconst DialogsForm = ({handleSubmit}:any) => {\r\n  return (\r\n    <form onSubmit={handleSubmit} className={style.appDialogsForm}>\r\n      <Field \r\n        validate={[required, maxLength, minLength]}\r\n        className={style.appDialogsMessagesInput} \r\n        component={MessageFormControl} \r\n        name=\"newMessageBody\" \r\n        placeholder=\"Write a message...\"\r\n      />\r\n      <button className={style.appDialogsMessagesSend}><img alt=\"sendIcon\" src={sendIcon}/></button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n  form: 'dialogs',\r\n  onSubmitSuccess: (res, dispatch) => dispatch(reset('dialogs'))\r\n})(DialogsForm);\r\n\r\nconst Dialogs = ({ messagesPage, sendMessageAC }:IProps) => {\r\n  const onSubmit = ({ newMessageBody, dispatch } :any) => {\r\n    sendMessageAC(newMessageBody);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={style.appDialogs}>\r\n      <div className={style.appDialogsFriendAndMessages}>\r\n        <div className={style.users}>\r\n          {messagesPage.dialogs.map( (item: {name: string, id: number}) => <DialogItem name={item.name} id={item.id} key={item.id}/>)}\r\n        </div>\r\n\r\n        <div className={style.dialogList}>\r\n          {messagesPage.messages.map( (item: {content: string, id: number}) => <MessageItem content={item.content} key={item.id}/>)}\r\n        </div>\r\n      </div>\r\n\r\n      <DialogsReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;","import React, { PureComponent } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {WithAuthRedirect} from '../../hoc/WithAuthRedirect';\r\nimport {sendMessageAC} from '../../redux/actions';\r\nimport Dialogs from './Dialogs/Dialogs';\r\n\r\nclass DialogsContainer extends PureComponent {\r\n  render() {\r\n    return <Dialogs {...this.props}/>;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({global}) => ({messagesPage: global.messagesPage, isAuth: global.auth.isAuth});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {sendMessageAC}), \r\n  WithAuthRedirect\r\n)(\r\n  DialogsContainer\r\n);\r\n"],"sourceRoot":""}